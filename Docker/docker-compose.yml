# 创建一个名为 "aioveu-boot" 的桥接网络，在同一个网络中的容器可以通过容器名互相访问
networks:
  aioveu-boot:
    driver: bridge

services:
  mysql:
    image: mysql:8.0.29
    container_name: aioveu-boot-mysql
    restart: unless-stopped # 重启策略：除非手动停止容器，否则自动重启
    environment:
      - TZ=Asia/Shanghai
      - LANG= en_US.UTF-8
      - MYSQL_ROOT_PASSWORD=775825 #设置 root 用户的密码   默认密码123456存储在mysql-data里，重建容器要把data清空
    volumes:
      - ./mysql/conf/my.cnf:/etc/my.cnf # 挂载 my.cnf 文件到容器的指定路径
      - ./mysql/data:/var/lib/mysql # 持久化 MySQL 数据
      - ../sql/mysql:/docker-entrypoint-initdb.d # 初始化 SQL 脚本目录
    ports:
      - 3309:3306
    networks:
      - aioveu-boot # 加入 "aioveu-boot" 网络

  redis:
    image: redis:7.2.3
    container_name: aioveu-boot-redis
    restart: unless-stopped
    command: redis-server /etc/redis/redis.conf  # 启动 Redis 服务并添加密码为：123456，默认不开启 Redis AOF 方式持久化配置
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./redis/data:/data
      - ./redis/config/redis.conf:/etc/redis/redis.conf
    ports:
      - 6381:6379
    networks:
      - aioveu-boot

  minio:
#    image: minio/minio:latest
    image: minio/minio:RELEASE.2024-07-16T23-46-41Z   #选择可编辑桶的minio镜像版本
    container_name: aioveu-boot-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    ports:
      - 9002:9000
      - 9003:9001
    environment:
      - TZ=Asia/Shanghai
      - LANG=en_US.UTF-8
#      - MINIO_ROOT_USER=minioadmin
#      - MINIO_ROOT_PASSWORD=minioadmin
      #解决 MinIO 默认凭证安全警告
      #这个警告表明您的 MinIO 实例正在使用默认管理员凭证（minioadmin:minioadmin），这会造成严重的安全风险。
      - MINIO_ROOT_USER=minioaioveu
      - MINIO_ROOT_PASSWORD=minioaioveu
    volumes:
      - ./minio/data:/data
      - ./minio/config:/root/.minio
    networks:
      - aioveu-boot

  xxl-job-admin:
    image: xuxueli/xxl-job-admin:2.4.0
    container_name: aioveu-boot-xxl-job-admin
    restart: unless-stopped
    environment:
      PARAMS: '--spring.datasource.url=jdbc:mysql://mysql:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai --spring.datasource.username=root --spring.datasource.password=775825 --spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver'
    volumes:
      - ./xxljob/logs:/data/applogs
    ports:
      - 8080:8080
    networks:
      - aioveu-boot

  aioveu-boot:
    image: aioveu-boot:v0.1.2
    container_name: aioveu-boot
    #    build:
    #      context: .
    #      dockerfile: Dockerfile
    ports:
      - 8989:8989
    networks:
      - aioveu-boot
    depends_on:
      - mysql


  aioveu-nginx:
    image: nginx    #使用的镜像名称
    container_name: aioveu-nginx #给容器指定一个名称，方便以后引用。
    restart: unless-stopped
    #    build:
    #      context: .
    #      dockerfile: Dockerfile
    volumes:
#      - ./mnt/nginx/nginx.conf:/etc/nginx/nginx.conf   #挂载主配置文件
#      - ./mnt/nginx/html:/usr/share/nginx/html         #挂载网站文件
#      - ./mnt/nginx/logs:/var/log/nginx/               #持久化存储日志
#      - ./mnt/nginx/ssl:/etc/nginx/ssl                 #挂载SSL证书
      #
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf   #挂载主配置文件
      - ./nginx/html:/usr/share/nginx/html         #挂载网站文件
      - ./nginx/logs:/var/log/nginx/               #持久化存储日志
      - ./nginx/ssl:/etc/nginx/ssl                 #挂载SSL证书
    ports:
      - 8080:80    #表示将容器的80端口映射到宿主机的8080端口。格式为宿主机端口:容器端口
    networks:
      - aioveu-boot
    depends_on:
      - mysql
